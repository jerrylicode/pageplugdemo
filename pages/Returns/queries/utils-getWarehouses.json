{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getWarehouses",
    "fullyQualifiedName": "utils.getWarehouses",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Returns",
    "collectionId": "Returns_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  const returns = await getReturns.run();\n  const warehouses = returns.map(p => {\n    return {\n      id: p.warehouse_id,\n      name: p.warehouse\n    };\n  });\n  const sanitisedWarehouses = warehouses.filter(warehouse => warehouse.name !== null && warehouse.name.trim() !== \"\");\n  if (!returns || returns.length < 1) {\n    return [{\n      id: 1,\n      name: 'Jamison Yard'\n    }, {\n      id: 2,\n      name: 'Brit Avenue'\n    }];\n  }\n  const uniqueWarehousesRaw = {};\n  for (let i = 0; i < sanitisedWarehouses.length; i++) {\n    uniqueWarehousesRaw[sanitisedWarehouses[i].name] = {\n      id: sanitisedWarehouses[i].id\n    };\n  }\n  const uniqueWarehouses = Object.keys(uniqueWarehousesRaw);\n  return uniqueWarehouses.map(category => {\n    return {\n      id: uniqueWarehousesRaw[category].id,\n      name: category\n    };\n  });\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  const returns = await getReturns.run();\n  const warehouses = returns.map(p => {\n    return {\n      id: p.warehouse_id,\n      name: p.warehouse\n    };\n  });\n  const sanitisedWarehouses = warehouses.filter(warehouse => warehouse.name !== null && warehouse.name.trim() !== \"\");\n  if (!returns || returns.length < 1) {\n    return [{\n      id: 1,\n      name: 'Jamison Yard'\n    }, {\n      id: 2,\n      name: 'Brit Avenue'\n    }];\n  }\n  const uniqueWarehousesRaw = {};\n  for (let i = 0; i < sanitisedWarehouses.length; i++) {\n    uniqueWarehousesRaw[sanitisedWarehouses[i].name] = {\n      id: sanitisedWarehouses[i].id\n    };\n  }\n  const uniqueWarehouses = Object.keys(uniqueWarehousesRaw);\n  return uniqueWarehouses.map(category => {\n    return {\n      id: uniqueWarehousesRaw[category].id,\n      name: category\n    };\n  });\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Returns_utils.getWarehouses",
  "deleted": false,
  "gitSyncId": "64f58f816fbfd93d5cd5b5cf_2023-09-04T08:05:28.035610Z"
}