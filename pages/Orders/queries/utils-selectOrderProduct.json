{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "selectOrderProduct",
    "fullyQualifiedName": "utils.selectOrderProduct",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Orders",
    "collectionId": "Orders_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async product => {\n  if (product) {\n    const orderProducts = appsmith.store.orderProducts || [];\n    if (orderProducts.length === 0) {\n      storeValue('orderProducts', [{\n        product,\n        count: 1\n      }]);\n      return;\n    }\n    const productInOrderProduct = orderProducts.filter(p => p.product.Id === product.Id);\n    if (productInOrderProduct && productInOrderProduct.length > 0) {\n      if (productInOrderProduct[0].count < product.Quantity) {\n        const removeOldProduct = orderProducts.filter(p => p.product.Id !== product.Id);\n        storeValue('orderProducts', [...removeOldProduct, {\n          product,\n          count: productInOrderProduct[0].count + 1\n        }]);\n        return;\n      } else {\n        return showAlert('All products added!', 'info');\n      }\n    } else {\n      storeValue('orderProducts', [...orderProducts, {\n        product,\n        count: 1\n      }]);\n      return;\n    }\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {
          "name": "product"
        }
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async product => {\n  if (product) {\n    const orderProducts = appsmith.store.orderProducts || [];\n    if (orderProducts.length === 0) {\n      storeValue('orderProducts', [{\n        product,\n        count: 1\n      }]);\n      return;\n    }\n    const productInOrderProduct = orderProducts.filter(p => p.product.Id === product.Id);\n    if (productInOrderProduct && productInOrderProduct.length > 0) {\n      if (productInOrderProduct[0].count < product.Quantity) {\n        const removeOldProduct = orderProducts.filter(p => p.product.Id !== product.Id);\n        storeValue('orderProducts', [...removeOldProduct, {\n          product,\n          count: productInOrderProduct[0].count + 1\n        }]);\n        return;\n      } else {\n        return showAlert('All products added!', 'info');\n      }\n    } else {\n      storeValue('orderProducts', [...orderProducts, {\n        product,\n        count: 1\n      }]);\n      return;\n    }\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Orders_utils.selectOrderProduct",
  "deleted": false,
  "gitSyncId": "64f58f816fbfd93d5cd5b5cf_2023-09-04T08:05:27.991831Z"
}